/*!
  * shared v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const p=typeof window<"u",a=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol",f=t=>a?Symbol(t):t,g=(t,e,c)=>r({l:t,k:e,s:c}),r=t=>JSON.stringify(t).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),b=t=>typeof t=="number"&&isFinite(t),u=t=>n(t)==="[object Date]",d=t=>n(t)==="[object RegExp]",S=t=>i(t)&&Object.keys(t).length===0;function j(t,e){typeof console<"u"&&(console.warn("[intlify] "+t),e&&console.warn(e.stack))}const w=Object.assign;let o;const O=()=>o||(o=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function m(t){return t.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const l=Object.prototype.hasOwnProperty;function h(t,e){return l.call(t,e)}const y=Array.isArray,T=t=>typeof t=="function",k=t=>typeof t=="string",N=t=>typeof t=="boolean",x=t=>t!==null&&typeof t=="object",s=Object.prototype.toString,n=t=>s.call(t),i=t=>n(t)==="[object Object]",A=t=>t==null?"":y(t)||i(t)&&t.toString===s?JSON.stringify(t,null,2):String(t);export{y as a,i as b,k as c,N as d,w as e,T as f,O as g,d as h,x as i,m as j,b as k,S as l,g as m,u as n,f as o,h as p,p as q,A as t,j as w};
