name: Build and Release Binaries

on:
  push:
    branches:
      - go-backend
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate changelog
        id: changelog
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
          echo -e "$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s %b %h %r" --oneline | awk '{print "- "$0}')" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
      - name: install lipo
        run: |
          curl -L -o /tmp/lipo https://github.com/konoui/lipo/releases/latest/download/lipo_Linux_amd64
          chmod +x /tmp/lipo
          mv /tmp/lipo /usr/local/bin
      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Build Frontend
        run: |
          #!/bin/bash
          npm install pnpm -g
          pnpm install
          pnpm run build
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Build binary
        run: |
          #!/bin/bash
          cp -rp dist/* goservice/html/
          cd goservice

          mkdir -p artifacts

          build_go() {
            local goos=$1 goarch=$2 filename=$3
            export GOOS=$goos
            export GOARCH=$goarch
            export LD_FLAGS="-s -w"
            export CGO_ENABLED=0

            if [[ "$goos" == "windows" ]]; then
              export GOARM=7
            fi

            if [[ "$goos" == "windows" ]]; then
              go build -ldflags "$LD_FLAGS" -trimpath -o chatgpt-web.exe
              7z a -mx9 -sdel "$filename" chatgpt-web.exe
            else
              go build -ldflags "$LD_FLAGS" -trimpath -o "$filename"
            fi
          }

          build_go windows amd64 artifacts/chatgpt-web_win64.zip
          build_go windows arm64 artifacts/chatgpt-web_win_arm64.zip

          build_go linux amd64 artifacts/chatgpt-web_linux_amd64
          build_go linux 386 artifacts/chatgpt-web_linux_i386
          build_go linux arm64 artifacts/chatgpt-web_linux_arm64

          build_go linux arm artifacts/chatgpt-web_linux_arm

          build_go linux ppc64le artifacts/chatgpt-web_linux_ppc64le

          build_go darwin amd64 chatgpt-web.amd64
          build_go darwin arm64 chatgpt-web.arm64

          lipo -output artifacts/chatgpt-web-macos -create chatgpt-web.arm64 chatgpt-web.amd64

          parallel --jobs $(nproc) "upx {}" ::: artifacts/chatgpt-web_linux_*
      - uses: actions/upload-artifact@v3
        with:
          name: chatgpt-web
          path: goservice/artifacts/*
      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.head_ref || github.ref_name }}-nightly
          name: chatgpt-web ${{ github.head_ref || github.ref_name }} nightly
          prerelease: true
          body: ${{ env.CHANGELOG }}
          files: |
            goservice/artifacts/*
